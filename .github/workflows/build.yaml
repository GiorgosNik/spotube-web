name: Test and Build

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - '*'

jobs:
  Test:
    runs-on: ubuntu-latest
    env:
      GENIUS_API_KEY: ${{ secrets.GENIUS_API_KEY }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo add-apt-repository ppa:jonathonf/ffmpeg-4
          sudo apt install -y software-properties-common ffmpeg jq

      - name: Setup project environment
        run: |
          python -m pip install --upgrade pip
          cd server
          pip install -r requirements.txt

      - name: Install testing dependencies
        run: |
          cd server
          pip install pylint pytest pytest-cov selenium playwright

      - name: Running pytest
        run: |
          cd server
          python manage.py test api.tests.api_tests
          
  Docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: Test
    runs-on: ubuntu-latest
    env:
      GENIUS_API_KEY: ${{ secrets.GENIUS_API_KEY }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          cd server
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spotube-web:latest --build-arg GENIUS_API_KEY=${{ secrets.GENIUS_API_KEY }} --build-arg SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }} --build-arg SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }} .
      
      - name: Push to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spotube-web:latest

  AzureDeploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Docker
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.AzureAppService_ContainerUsername_e882a4bd053e445bae0c8b8303e2858d }}
        password: ${{ secrets.AzureAppService_ContainerPassword_34a9f175e61d480fa812f22634b22717 }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'SpotubeWeb'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_3e189a110a5e4066a5fd5ecce7958736 }}
        images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_e882a4bd053e445bae0c8b8303e2858d }}/spotube-web:latest'
        
  GithubPagesDeploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    env:
      REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          
      - uses: actions/checkout@v3
      - uses: fregante/setup-git-user@v1

      - name: Install dependencies
        run: |
          cp app .
          npm install --force
          
      - name: Build and Deploy React app to GitHub Pages
        uses: omkartapale/react-deployment-gh-pages@v1.0.0
  
